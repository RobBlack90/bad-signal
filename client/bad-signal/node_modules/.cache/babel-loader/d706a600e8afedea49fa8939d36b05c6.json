{"remainingRequest":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/babel-loader/lib/index.js!/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/src/components/Home.vue","mtime":1563381574000},{"path":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/blackr/Documents/Development/Personal/bad-signal/client/bad-signal/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { users } from '@/services/api.js'; // import { events } from '@/services/api.js'\n\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      isConnected: false,\n      name: \"\",\n      message: \"\",\n      currentUser: null,\n      userList: [],\n      eventList: [],\n      offlineUsers: []\n    };\n  },\n  sockets: {\n    connect: function connect() {\n      this.isConnected = true;\n    },\n    disconnect: function disconnect() {\n      this.isConnected = false;\n    },\n    newEvent: function newEvent(event) {\n      // eslint-disable-next-line\n      console.log('this thing on?');\n      this.eventList.push(event);\n    },\n    currentUsers: function currentUsers(users) {\n      // eslint-disable-next-line\n      console.log('users'); // eslint-disable-next-line\n\n      console.log(users);\n      this.userList = users;\n    }\n  },\n  created: function created() {\n    // document.addEventListener(\"beforeunload\", () => this.disconnectUser)\n    window.addEventListener(\"beforeunload\", this.disconnectUser);\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setOfflineUsers();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: {\n    filteredUsers: function filteredUsers() {\n      var _this = this;\n\n      // eslint-disable-next-line\n      console.log('filtering');\n      return this.userList.filter(function (user) {\n        return user._id !== _this.currentUser._id;\n      });\n    },\n    userAvatar: function userAvatar() {\n      return function (id) {\n        return \"https://api.adorable.io/avatars/285/\".concat(id, \".png\");\n      };\n    },\n    isOwnEvent: function isOwnEvent(event) {\n      return event._id === this.currentUser._id;\n    }\n  },\n  methods: {\n    connectUser: function () {\n      var _connectUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(user) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (user) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 3;\n                return users.create({\n                  name: this.name\n                });\n\n              case 3:\n                this.currentUser = _context2.sent;\n                _context2.next = 7;\n                break;\n\n              case 6:\n                this.currentUser = user;\n\n              case 7:\n                this.$socket.emit('userJoined', this.currentUser);\n                this.currentUser.isOnline = true;\n                this.name = \"\";\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function connectUser(_x) {\n        return _connectUser.apply(this, arguments);\n      }\n\n      return connectUser;\n    }(),\n    disconnectUser: function disconnectUser() {\n      if (this.currentUser.name) {\n        this.$socket.emit('userLeft', this.currentUser);\n      }\n    },\n    sendMessage: function sendMessage() {\n      var newMessage = {\n        message: this.message,\n        type: 'message',\n        user: this.currentUser\n      };\n      this.$socket.emit('eventSent', newMessage);\n      this.message = \"\";\n    },\n    setOfflineUsers: function () {\n      var _setOfflineUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return users.list({\n                  isOnline: false\n                });\n\n              case 2:\n                this.offlineUsers = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setOfflineUsers() {\n        return _setOfflineUsers.apply(this, arguments);\n      }\n\n      return setOfflineUsers;\n    }()\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <b-img v-if=currentUser :src=\"userAvatar(currentUser._id)\"></b-img>\n    <h1 v-if=\"currentUser\">Yo Whaddup {{currentUser.name}}!</h1>\n    <h3 v-if=\"currentUser && filteredUsers.length > 0\">You're here with <span v-for=\"user in filteredUsers\" :key=\"user._id\" >{{user.name}}, </span></h3>\n    <h3 v-else-if=\"currentUser && filteredUsers.length === 0\">You're in here all by your lonesome.</h3>\n    <p v-if=\"isConnected\">We're live.</p>\n    <p v-if=\"!isConnected\">The system is down.</p>\n\n    <b-input-group v-if=\"!currentUser\">\n        <b-form-input  placeholder=\"What's yo name?\" v-model=\"name\"/>\n        <b-input-group-append>\n            <b-button variant=\"primary\" @click=\"connectUser()\">Connect!</b-button>\n        </b-input-group-append>\n    </b-input-group>\n\n    <div v-if=\"!currentUser\">\n        <b-list-group v-for=\"user in offlineUsers\" :key=\"user._id\">\n            <b-list-group-item @click=\"connectUser(user)\">{{user.name}}</b-list-group-item>\n        </b-list-group>\n    </div>\n\n    <div v-if=\"currentUser\">\n        <b-list-group v-for=\"event in eventList\" :key=\"event.time\">\n            <b-list-group-item class=\"d-flex justify-content-between align-items-center\">\n                {{event.message}}\n            </b-list-group-item>\n        </b-list-group>\n        <b-input-group>\n            <b-form-input  placeholder=\"Say Stuff\" v-model=\"message\"/>\n            <b-input-group-append>\n                <b-button variant=\"primary\" @click=\"sendMessage()\">Chat!</b-button>\n            </b-input-group-append>\n        </b-input-group>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { users } from '@/services/api.js'\n// import { events } from '@/services/api.js'\n\n\nexport default {\n    components: {\n\t},\n    data () {\n        return {\n            isConnected: false,\n            name: \"\",\n            message: \"\",\n            currentUser: null,\n            userList: [],\n            eventList: [],\n            offlineUsers: []\n        }\n    },\n    sockets: {\n        connect() {\n            this.isConnected = true;\n        },\n        disconnect() {\n            this.isConnected = false;\n        },\n        newEvent(event) {\n            // eslint-disable-next-line\n            console.log('this thing on?')\n            this.eventList.push(event)\n        },\n        currentUsers(users) {\n            // eslint-disable-next-line\n            console.log('users')\n            // eslint-disable-next-line\n            console.log(users)\n            this.userList = users\n        }\n    },\n    created() {\n        // document.addEventListener(\"beforeunload\", () => this.disconnectUser)\n        window.addEventListener(\"beforeunload\", this.disconnectUser)\n    },\n    async mounted() {\n        this.setOfflineUsers()\n    },\n    computed: {\n        filteredUsers: function() {  \n            // eslint-disable-next-line\n            console.log('filtering')\n            return this.userList.filter(user => user._id !== this.currentUser._id)\n        },\n        userAvatar: function() {\n            return (id) => `https://api.adorable.io/avatars/285/${id}.png`\n        },\n        isOwnEvent: function(event) {\n            return event._id === this.currentUser._id \n        }\n    },\n\tmethods: {\n        async connectUser(user) {\n            if(!user) {\n                this.currentUser = await users.create({name: this.name})\n            } else {\n                this.currentUser = user\n            }\n            this.$socket.emit('userJoined', this.currentUser)\n            this.currentUser.isOnline = true\n            this.name = \"\"\n        },\n        disconnectUser() {\n            if(this.currentUser.name) {\n                this.$socket.emit('userLeft', this.currentUser)\n            }\n        },\n        sendMessage() {\n            let newMessage = {\n                message: this.message,\n                type: 'message',\n                user: this.currentUser\n            }\n            this.$socket.emit('eventSent', newMessage)\n            this.message = \"\"\n        },\n        async setOfflineUsers() {\n            this.offlineUsers = await users.list({isOnline:false})\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}